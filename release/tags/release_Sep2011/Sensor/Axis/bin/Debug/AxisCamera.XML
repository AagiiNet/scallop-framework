<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AxisCamera</name>
    </assembly>
    <members>
        <member name="T:Scallop.Sensor.Axis.AxisCameraClass">
            <summary>
            Axis IP camera class.
            </summary>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.#ctor">
            <summary>
            Constructor. Sets up the configuration schema.
            </summary>
            <exception cref="T:System.ApplicationException">Thrown when there is an error with getting the schema from the assembly.</exception>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.Dispose">
            <summary>
            Frees the resources used by the object.
            </summary>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.Register(System.Xml.XmlDocument,System.String)">
            <summary>
            Registers a node with a sensor.
            </summary>
            <param name="configDoc">The configuration XML document.</param>
            <param name="selectConfig">String identifying the configuration item to use.</param>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.Register(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Registers a node with a sensor.
            </summary>
            <param name="configDoc">The configuration XML document.</param>
            <param name="selectConfig">String identifying the configuration item to use.</param>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.Unregister">
            <summary>
            Unregisters a node from a sensor.
            </summary>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.Start">
            <summary>
            Starts receiving sensor data.
            </summary>
            <exception cref="T:System.ApplicationException">Thrown if sensor has not been
            registered prior to calling Start().</exception>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.Stop">
            <summary>
            Stops receiving sensor data.
            </summary>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.PanTilt(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Pans the sensor.
            </summary>
            <param name="absolute">True if absolute pan value, 
            false if relative.</param>
            <param name="x">Degrees to pan on the horizontal axis.</param>
            <param name="y">Degrees to pan on the vertical axis.</param>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.Zoom(System.Boolean,System.Int32)">
            <summary>
            Zooms the sensor.
            </summary>
            <param name="absolute">True if absolute zoom value, 
            false if relative.</param>
            <param name="zoomValue">The zoom value.</param>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.getFrames_completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.getFrames(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Parse the MJPG stream. This should only return in the case of an 
            exception accuring.
            </summary>
            <exception cref="T:System.ApplicationException">Thrown when
            there is a problem with the handling of the stream. See the
            string description for more information.</exception>
        </member>
        <member name="M:Scallop.Sensor.Axis.AxisCameraClass.readMjpgLine(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.IO.IOException">Thrown when end-of-stream is 
            encountered</exception>
            <exception cref="T:System.Net.WebException"></exception>
        </member>
        <member name="P:Scallop.Sensor.Axis.AxisCameraClass.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:Scallop.Sensor.Axis.AxisCameraClass.ConfigSchema">
            <summary>
            Gets the configuration XML schema associated with an Axis camera.
            </summary>
        </member>
        <member name="P:Scallop.Sensor.Axis.AxisCameraClass.State">
            <summary>
            Gets the sensor state.
            </summary>
        </member>
        <member name="E:Scallop.Sensor.Axis.AxisCameraClass.StatusChanged">
            <summary>
            An event indicating the sensor status has changed. This could mean it
            has become active, encountered an error condition, etc.
            </summary>
        </member>
        <member name="E:Scallop.Sensor.Axis.AxisCameraClass.Data">
            <summary>
            Fired when a new frame is available. The image data is passed in the
            event arguments.
            </summary>
        </member>
        <member name="E:Scallop.Sensor.Axis.AxisCameraClass.Info">
            <summary>
            Fired when the camera module wants to inform the user of something.
            </summary>
        </member>
        <member name="T:Scallop.Sensor.Axis.AxisParameters">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
